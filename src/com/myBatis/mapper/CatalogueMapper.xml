<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.myBatis.dao.ICatalogueDao">
  <resultMap id="BaseResultMap" type="com.myBatis.bean.Catalogue">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="index_name" jdbcType="VARCHAR" property="indexName" />
    <result column="href" jdbcType="VARCHAR" property="href" />
    <result column="type" jdbcType="VARCHAR" property="type" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.myBatis.bean.Catalogue">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
    <resultMap id="BaseResultMap_index" type="com.myBatis.bean.Catalogue">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="index_name" jdbcType="VARCHAR" property="indexName" />
    <result column="href" jdbcType="VARCHAR" property="href" />
    <result column="type" jdbcType="VARCHAR" property="type" />
  </resultMap>
  
    <resultMap  id="ResultMapWithBLOBs_context" type="com.myBatis.bean.Catalogue">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, index_name, href, type
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.myBatis.bean.CatalogueExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from catalogue
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.myBatis.bean.CatalogueExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from catalogue
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from catalogue
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from catalogue
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.myBatis.bean.CatalogueExample">
    delete from catalogue
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.myBatis.bean.Catalogue">
    insert into catalogue (id, index_name, href, 
      type, content)
    values (#{id,jdbcType=INTEGER}, #{indexName,jdbcType=VARCHAR}, #{href,jdbcType=VARCHAR}, 
      #{type,jdbcType=VARCHAR}, #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.myBatis.bean.Catalogue">
    insert into catalogue
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="indexName != null">
        index_name,
      </if>
      <if test="href != null">
        href,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="indexName != null">
        #{indexName,jdbcType=VARCHAR},
      </if>
      <if test="href != null">
        #{href,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.myBatis.bean.CatalogueExample" resultType="java.lang.Long">
    select count(*) from catalogue
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update catalogue
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.indexName != null">
        index_name = #{record.indexName,jdbcType=VARCHAR},
      </if>
      <if test="record.href != null">
        href = #{record.href,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update catalogue
    set id = #{record.id,jdbcType=INTEGER},
      index_name = #{record.indexName,jdbcType=VARCHAR},
      href = #{record.href,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=VARCHAR},
      content = #{record.content,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update catalogue
    set id = #{record.id,jdbcType=INTEGER},
      index_name = #{record.indexName,jdbcType=VARCHAR},
      href = #{record.href,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.myBatis.bean.Catalogue">
    update catalogue
    <set>
      <if test="indexName != null">
        index_name = #{indexName,jdbcType=VARCHAR},
      </if>
      <if test="href != null">
        href = #{href,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.myBatis.bean.Catalogue">
    update catalogue
    set index_name = #{indexName,jdbcType=VARCHAR},
      href = #{href,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.myBatis.bean.Catalogue">
    update catalogue
    set index_name = #{indexName,jdbcType=VARCHAR},
      href = #{href,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
    <!-- 自定义sql -->
    <select id="selectByUUID"   parameterType="java.lang.String" resultMap="BaseResultMap_index" >
    select id, index_name
    from catalogue 
	where type =#{_parameter}  
	order by  id  desc 
  </select>
      <!-- 自定义sql -->
    <select id="selectByID"   parameterType="java.lang.String" resultMap="ResultMapWithBLOBs_context" >
    select content
    from catalogue 
	where id =#{_parameter}  
  </select>
  
        <!-- 自定义sql -->
    <select id="selectContextIsNULL"   resultMap="ResultMapWithBLOBs"   >
    select href
    from catalogue 
	where  content is null
  </select>
     <!-- 批量插入 -->
	<insert id="insertBatch" parameterType="java.util.List">
		insert into catalogue
		(index_name,href,type,`index`,name,int_index)
		values
		<foreach collection="list" item="modles" index="index" separator=",">
			(#{modles.indexName},
			 #{modles.href},
			 #{modles.type},
			 #{modles.index},
			 #{modles.name},
			 #{modles.intIndex})
		</foreach>
	</insert>
	<!-- 	查询context为null的数据 -->
	<update id="updateContext" parameterType="com.myBatis.bean.Catalogue">
    update catalogue
    set 
    content = #{content,jdbcType=LONGVARCHAR} 
    where href = #{href,jdbcType=VARCHAR}
  </update>
  	<!-- 	批量更新小说内容 -->
	<update id="updateContextList" parameterType="java.util.List">
    <foreach collection="list" item="item" index="index" open="" close="" separator=";">  
                update catalogue   
                 <set>
                  content=#{item.content,jdbcType=LONGVARCHAR}    
                 </set>
                where href = #{item.href,jdbcType=VARCHAR}  
         </foreach>  
  </update>
  
</mapper>